<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


	<context:component-scan base-package="com.unionpay.*"></context:component-scan>


	<bean id="consumerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="10.110.2.11:9092" />
				<entry key="group.id" value="g1" />
				<entry key="enable.auto.commit" value="true" />
				<entry key="auto.commit.interval.ms" value="1000" />
				<entry key="session.timeout.ms" value="15000" />
				<entry key="key.deserializer"
					   value="org.apache.kafka.common.serialization.StringDeserializer" />
				<entry key="value.deserializer"
					   value="org.apache.kafka.common.serialization.StringDeserializer" />
			</map>
		</constructor-arg>
	</bean>

	<bean id="messageListernerConsumerListener" class="com.unionpay.consumer.KafkaConsumer1Listener" />

	<!-- 创建consumerFactory bean -->
	<bean id="consumerFactory"
		  class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
		<constructor-arg>
			<ref bean="consumerProperties" />
		</constructor-arg>
	</bean>



	<!-- 消费者容器配置信息,多topic配置 -->
	<bean id="ztf_containerProperties"
		  class="org.springframework.kafka.listener.ContainerProperties">
		<constructor-arg value="ztfTopic" />
		<property name="messageListener" ref="messageListernerConsumerListener" />
	</bean>
	<bean id="hhcf_containerProperties"
		  class="org.springframework.kafka.listener.ContainerProperties">
		<constructor-arg value="aaa" />
		<property name="messageListener" ref="messageListernerConsumerListener" />
	</bean>

	<!-- 创建messageListenerContainer,多topic配置 -->
	<bean id="ztf_kafkaMessageListenerContainer" init-method="doStart"
		  class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="ztf_containerProperties" />
	</bean>
	<bean id="hhcf_kafkaMessageListenerContainer" init-method="doStart"
		  class="org.springframework.kafka.listener.KafkaMessageListenerContainer">
		<constructor-arg ref="consumerFactory" />
		<constructor-arg ref="hhcf_containerProperties" />
	</bean>




	<!-- 定义producer的参数 -->
	<bean id="producerProperties" class="java.util.HashMap">
		<constructor-arg>
			<map>
				<entry key="bootstrap.servers" value="10.110.2.11:9092" />
				<entry key="group.id" value="0" />
				<entry key="retries" value="1" />
				<entry key="batch.size" value="16384" />
				<entry key="linger.ms" value="1" />
				<entry key="buffer.memory" value="33554432" />
				<entry key="key.serializer"
					   value="org.apache.kafka.common.serialization.StringSerializer" />
				<entry key="value.serializer"
					   value="org.apache.kafka.common.serialization.StringSerializer" />
			</map>
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate需要使用的producerfactory bean -->
	<bean id="producerFactory"
		  class="org.springframework.kafka.core.DefaultKafkaProducerFactory">
		<constructor-arg>
			<ref bean="producerProperties" />
		</constructor-arg>
	</bean>

	<!-- 创建kafkatemplate bean，使用的时候，只需要注入这个bean，即可使用template的send消息方法 -->
	<bean id="kafkaTemplate" class="org.springframework.kafka.core.KafkaTemplate">
		<constructor-arg ref="producerFactory" />
		<constructor-arg name="autoFlush" value="true" />
		<!--
		<property name="defaultTopic" value="ztfTopic" />
		 -->
		<property name="producerListener" ref="producerListener" />
	</bean>

	<bean id="producerListener" class="com.unionpay.producer.KafkaProducerListener" />

</beans>